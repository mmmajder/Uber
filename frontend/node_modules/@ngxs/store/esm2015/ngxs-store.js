/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxsModule, Action, Store, State, Select, SelectorOptions, Actions, getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata, ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted, NgxsSimpleChange, Selector, getActionTypeFromInstance, actionMatcher, createSelector, NoopNgxsExecutionStrategy, StateToken, NGXS_PLUGINS, StateStream, setValue, getValue, InitState, UpdateState } from './index';
export { InternalActions as ɵb, OrderedSubject as ɵa } from './src/actions-stream';
export { SelectFactory as ɵr } from './src/decorators/select/select-factory';
export { InternalNgxsExecutionStrategy as ɵq } from './src/execution/internal-ngxs-execution-strategy';
export { NGXS_EXECUTION_STRATEGY as ɵi, USER_PROVIDED_NGXS_EXECUTION_STRATEGY as ɵh } from './src/execution/symbols';
export { InternalDispatchedActionResults as ɵl, InternalDispatcher as ɵm } from './src/internal/dispatcher';
export { ensureSelectorMetadata as ɵv, ensureStoreMetadata as ɵt, getSelectorMetadata as ɵw, getStoreMetadata as ɵu } from './src/internal/internals';
export { LifecycleStateManager as ɵx } from './src/internal/lifecycle-state-manager';
export { StateContextFactory as ɵn } from './src/internal/state-context-factory';
export { StateFactory as ɵk } from './src/internal/state-factory';
export { InternalStateOperations as ɵo } from './src/internal/state-operations';
export { NgxsFeatureModule as ɵy } from './src/modules/ngxs-feature.module';
export { NgxsRootModule as ɵj } from './src/modules/ngxs-root.module';
export { PluginManager as ɵp } from './src/plugin-manager';
export { FEATURE_STATE_TOKEN as ɵd, NgxsConfig as ɵf, ROOT_STATE_TOKEN as ɵc, SELECTOR_META_KEY as ɵe } from './src/symbols';
export { mergeDeep as ɵg } from './src/utils/utils';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4cy1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsibmd4cy1zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsbWRBQWMsU0FBUyxDQUFDO0FBRXhCLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRixPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQzNFLE9BQU8sRUFBQyw2QkFBNkIsSUFBSSxFQUFFLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUNyRyxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLHFDQUFxQyxJQUFJLEVBQUUsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ2xILE9BQU8sRUFBQywrQkFBK0IsSUFBSSxFQUFFLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekcsT0FBTyxFQUEwQixzQkFBc0IsSUFBSSxFQUFFLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUMxSyxPQUFPLEVBQUMscUJBQXFCLElBQUksRUFBRSxFQUFDLE1BQU0sd0NBQXdDLENBQUM7QUFDbkYsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBQyxZQUFZLElBQUksRUFBRSxFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQzlFLE9BQU8sRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUMxRSxPQUFPLEVBQUMsY0FBYyxJQUFJLEVBQUUsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxhQUFhLElBQUksRUFBRSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFekQsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxVQUFVLElBQUksRUFBRSxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEgsT0FBTyxFQUFDLFNBQVMsSUFBSSxFQUFFLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7SW50ZXJuYWxBY3Rpb25zIGFzIMm1YixPcmRlcmVkU3ViamVjdCBhcyDJtWF9IGZyb20gJy4vc3JjL2FjdGlvbnMtc3RyZWFtJztcbmV4cG9ydCB7U2VsZWN0RmFjdG9yeSBhcyDJtXJ9IGZyb20gJy4vc3JjL2RlY29yYXRvcnMvc2VsZWN0L3NlbGVjdC1mYWN0b3J5JztcbmV4cG9ydCB7SW50ZXJuYWxOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgYXMgybVxfSBmcm9tICcuL3NyYy9leGVjdXRpb24vaW50ZXJuYWwtbmd4cy1leGVjdXRpb24tc3RyYXRlZ3knO1xuZXhwb3J0IHtOR1hTX0VYRUNVVElPTl9TVFJBVEVHWSBhcyDJtWksVVNFUl9QUk9WSURFRF9OR1hTX0VYRUNVVElPTl9TVFJBVEVHWSBhcyDJtWh9IGZyb20gJy4vc3JjL2V4ZWN1dGlvbi9zeW1ib2xzJztcbmV4cG9ydCB7SW50ZXJuYWxEaXNwYXRjaGVkQWN0aW9uUmVzdWx0cyBhcyDJtWwsSW50ZXJuYWxEaXNwYXRjaGVyIGFzIMm1bX0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvZGlzcGF0Y2hlcic7XG5leHBvcnQge1N0YXRlQ2xhc3NJbnRlcm5hbCBhcyDJtXMsZW5zdXJlU2VsZWN0b3JNZXRhZGF0YSBhcyDJtXYsZW5zdXJlU3RvcmVNZXRhZGF0YSBhcyDJtXQsZ2V0U2VsZWN0b3JNZXRhZGF0YSBhcyDJtXcsZ2V0U3RvcmVNZXRhZGF0YSBhcyDJtXV9IGZyb20gJy4vc3JjL2ludGVybmFsL2ludGVybmFscyc7XG5leHBvcnQge0xpZmVjeWNsZVN0YXRlTWFuYWdlciBhcyDJtXh9IGZyb20gJy4vc3JjL2ludGVybmFsL2xpZmVjeWNsZS1zdGF0ZS1tYW5hZ2VyJztcbmV4cG9ydCB7U3RhdGVDb250ZXh0RmFjdG9yeSBhcyDJtW59IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLWNvbnRleHQtZmFjdG9yeSc7XG5leHBvcnQge1N0YXRlRmFjdG9yeSBhcyDJtWt9IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLWZhY3RvcnknO1xuZXhwb3J0IHtJbnRlcm5hbFN0YXRlT3BlcmF0aW9ucyBhcyDJtW99IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLW9wZXJhdGlvbnMnO1xuZXhwb3J0IHtOZ3hzRmVhdHVyZU1vZHVsZSBhcyDJtXl9IGZyb20gJy4vc3JjL21vZHVsZXMvbmd4cy1mZWF0dXJlLm1vZHVsZSc7XG5leHBvcnQge05neHNSb290TW9kdWxlIGFzIMm1an0gZnJvbSAnLi9zcmMvbW9kdWxlcy9uZ3hzLXJvb3QubW9kdWxlJztcbmV4cG9ydCB7UGx1Z2luTWFuYWdlciBhcyDJtXB9IGZyb20gJy4vc3JjL3BsdWdpbi1tYW5hZ2VyJztcbmV4cG9ydCB7VG9rZW5OYW1lIGFzIMm1en0gZnJvbSAnLi9zcmMvc3RhdGUtdG9rZW4vc3ltYm9scyc7XG5leHBvcnQge0ZFQVRVUkVfU1RBVEVfVE9LRU4gYXMgybVkLE5neHNDb25maWcgYXMgybVmLFJPT1RfU1RBVEVfVE9LRU4gYXMgybVjLFNFTEVDVE9SX01FVEFfS0VZIGFzIMm1ZX0gZnJvbSAnLi9zcmMvc3ltYm9scyc7XG5leHBvcnQge21lcmdlRGVlcCBhcyDJtWd9IGZyb20gJy4vc3JjL3V0aWxzL3V0aWxzJzsiXX0=