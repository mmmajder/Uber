{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/user.service\";\nimport * as i2 from \"../../../services/auth.service\";\n\nfunction ChangePasswordComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password has to be \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"at least 6 characters long\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Re-entered password is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords are not the same \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class ChangePasswordComponent {\n  constructor(userService, authService) {\n    this.userService = userService;\n    this.authService = authService;\n    this.hideCurrentPassword = true;\n    this.hideNewPassword = true;\n    this.hideReEnteredNewPassword = true;\n    this.currentPassword = \"\";\n    this.newPassword = \"\";\n    this.reEnteredNewPassword = \"\";\n    this.loggedUser = null;\n    this.currentPasswordFormControl = new FormControl('', [Validators.required]);\n    this.newPasswordFormControl = new FormControl('', [Validators.required, Validators.minLength(6)]);\n    this.reEnteredNewPasswordFormControl = new FormControl('', [Validators.required]);\n  }\n\n  ngOnInit() {\n    this.authService.getCurrentlyLoggedUser().subscribe(data => {\n      //TODO should the loggedUser be taken like this? sometimes because of the async it's not working well\n      this.loggedUser = data;\n    });\n  }\n\n  changePassword() {\n    if (this.loggedUser === null || this.currentPassword === \"\" || this.newPassword === \"\" || this.newPassword !== this.reEnteredNewPassword) {\n      console.log(\"something is not filled\"); //TODO induce showing of errors on form fields\n\n      return;\n    }\n\n    this.userService.changePassword(this.loggedUser.email, this.currentPassword, this.newPassword, this.reEnteredNewPassword).subscribe(data => {\n      console.log(data);\n    });\n  }\n\n}\n\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 30,\n  vars: 23,\n  consts: [[\"appearance\", \"outline\"], [\"matInput\", \"\", 3, \"type\", \"formControl\", \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"matInput\", \"\", 3, \"type\", \"ngModel\", \"formControl\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"width\", \"100%\", 3, \"click\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"mat-form-field\", 0)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Enter your current password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.currentPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_6_listener() {\n        return ctx.hideCurrentPassword = !ctx.hideCurrentPassword;\n      });\n      i0.ɵɵelementStart(7, \"mat-icon\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, ChangePasswordComponent_mat_error_9_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 0)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Enter your new password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.newPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_14_listener() {\n        return ctx.hideNewPassword = !ctx.hideNewPassword;\n      });\n      i0.ɵɵelementStart(15, \"mat-icon\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, ChangePasswordComponent_mat_error_17_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵtemplate(18, ChangePasswordComponent_mat_error_18_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-form-field\", 0)(20, \"mat-label\");\n      i0.ɵɵtext(21, \"Re-enter your new password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.reEnteredNewPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_23_listener() {\n        return ctx.hideReEnteredNewPassword = !ctx.hideReEnteredNewPassword;\n      });\n      i0.ɵɵelementStart(24, \"mat-icon\");\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, ChangePasswordComponent_mat_error_26_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵtemplate(27, ChangePasswordComponent_mat_error_27_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_28_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵtext(29, \"Change password\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hideCurrentPassword ? \"password\" : \"text\")(\"formControl\", ctx.currentPasswordFormControl)(\"ngModel\", ctx.currentPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hideCurrentPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hideCurrentPassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentPasswordFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hideNewPassword ? \"password\" : \"text\")(\"ngModel\", ctx.newPassword)(\"formControl\", ctx.newPasswordFormControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hideNewPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hideNewPassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newPasswordFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newPasswordFormControl.hasError(\"minlength\") && !ctx.newPasswordFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hideReEnteredNewPassword ? \"password\" : \"text\")(\"ngModel\", ctx.reEnteredNewPassword)(\"formControl\", ctx.reEnteredNewPasswordFormControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hideReEnteredNewPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hideReEnteredNewPassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reEnteredNewPasswordFormControl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.newPassword !== ctx.reEnteredNewPassword);\n    }\n  },\n  styles: [\"mat-form-field[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6ImNoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","ChangePasswordComponent","constructor","userService","authService","required","minLength","ngOnInit","getCurrentlyLoggedUser","subscribe","data","loggedUser","changePassword","currentPassword","newPassword","reEnteredNewPassword","console","log","email","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Ubernet\\frontend\\src\\app\\shared\\profile-edit\\change-password\\change-password.component.ts","C:\\Users\\Lenovo\\Desktop\\Ubernet\\frontend\\src\\app\\shared\\profile-edit\\change-password\\change-password.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  hideCurrentPassword: boolean = true;\r\n  hideNewPassword: boolean = true;\r\n  hideReEnteredNewPassword: boolean = true;\r\n\r\n  currentPassword: any = \"\";\r\n  newPassword: any = \"\";\r\n  reEnteredNewPassword: any = \"\";\r\n  loggedUser: any = null;\r\n\r\n  currentPasswordFormControl = new FormControl('', [Validators.required]);\r\n  newPasswordFormControl = new FormControl('', [Validators.required, Validators.minLength(6)]);\r\n  reEnteredNewPasswordFormControl = new FormControl('', [Validators.required]);\r\n\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getCurrentlyLoggedUser().subscribe(data => {\r\n      //TODO should the loggedUser be taken like this? sometimes because of the async it's not working well\r\n      this.loggedUser = data;\r\n    });\r\n  }\r\n\r\n  changePassword(): void {\r\n    if (this.loggedUser === null || this.currentPassword === \"\" || this.newPassword === \"\" || this.newPassword !== this.reEnteredNewPassword)\r\n    {\r\n      console.log(\"something is not filled\")\r\n      //TODO induce showing of errors on form fields\r\n      return\r\n    }\r\n\r\n    this.userService.changePassword(this.loggedUser.email, this.currentPassword, this.newPassword, this.reEnteredNewPassword)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Enter your current password</mat-label>\r\n      <input matInput [type]=\"hideCurrentPassword ? 'password' : 'text'\" [formControl]=\"currentPasswordFormControl\" [(ngModel)]=\"currentPassword\">\r\n      <button mat-icon-button matSuffix (click)=\"hideCurrentPassword = !hideCurrentPassword\" [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hideCurrentPassword\">\r\n        <mat-icon>{{hideCurrentPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"currentPasswordFormControl.hasError('required')\">\r\n        Password is <strong>required</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Enter your new password</mat-label>\r\n      <input matInput [type]=\"hideNewPassword ? 'password' : 'text'\" [(ngModel)]=\"newPassword\" [formControl]=\"newPasswordFormControl\">\r\n      <button mat-icon-button matSuffix (click)=\"hideNewPassword = !hideNewPassword\" [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hideNewPassword\">\r\n        <mat-icon>{{hideNewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"newPasswordFormControl.hasError('required')\">\r\n        Password is <strong>required</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"newPasswordFormControl.hasError('minlength')  && !newPasswordFormControl.hasError('required')\">\r\n        Password has to be <strong>at least 6 characters long</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Re-enter your new password</mat-label>\r\n      <input matInput [type]=\"hideReEnteredNewPassword ? 'password' : 'text'\" [(ngModel)]=\"reEnteredNewPassword\" [formControl]=\"reEnteredNewPasswordFormControl\">\r\n      <button mat-icon-button matSuffix (click)=\"hideReEnteredNewPassword = !hideReEnteredNewPassword\" [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hideReEnteredNewPassword\">\r\n        <mat-icon>{{hideReEnteredNewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n      <mat-error *ngIf=\"reEnteredNewPasswordFormControl.hasError('required')\">\r\n        Re-entered password is <strong>required</strong>\r\n      </mat-error>\r\n      <mat-error *ngIf=\"newPassword !== reEnteredNewPassword\">\r\n        Passwords are not the same\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\" style=\"width: 100%\" (click)=\"changePassword()\">Change password</button>\r\n  </mat-card-content>\r\n</mat-card>\r\n"]},"metadata":{},"sourceType":"module"}